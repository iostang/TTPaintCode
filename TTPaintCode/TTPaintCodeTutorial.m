//
//  TTPaintCodeTutorial.m
//  ProjectName
//
//  Created by AuthorName on 15/9/2.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "TTPaintCodeTutorial.h"


@implementation TTPaintCodeTutorial

#pragma mark Cache

static UIColor* _color = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _color = [UIColor colorWithRed: 0.067 green: 0.553 blue: 0.855 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)color { return _color; }

#pragma mark Drawing Methods

+ (void)drawStopwatch
{

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15, 30, 220, 220)];
    [TTPaintCodeTutorial.color setFill];
    [ovalPath fill];


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(114, 2, 22, 34)];
    [TTPaintCodeTutorial.color setFill];
    [rectanglePath fill];


    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(214.14, 30)];
    [bezierPath addLineToPoint: CGPointMake(235.36, 51.22)];
    [bezierPath addLineToPoint: CGPointMake(221.21, 65.36)];
    [bezierPath addCurveToPoint: CGPointMake(216.86, 61) controlPoint1: CGPointMake(221.21, 65.36) controlPoint2: CGPointMake(219.41, 63.56)];
    [bezierPath addLineToPoint: CGPointMake(204.14, 61)];
    [bezierPath addCurveToPoint: CGPointMake(204.14, 48.29) controlPoint1: CGPointMake(204.14, 61) controlPoint2: CGPointMake(204.14, 54)];
    [bezierPath addCurveToPoint: CGPointMake(200, 44.14) controlPoint1: CGPointMake(201.7, 45.85) controlPoint2: CGPointMake(200, 44.14)];
    [bezierPath addLineToPoint: CGPointMake(214.14, 30)];
    [bezierPath closePath];
    [TTPaintCodeTutorial.color setFill];
    [bezierPath fill];
}

+ (void)drawPaintCodeTutorial
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Bezier 2 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 125, 110);

    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(3.43, -79.95)];
    [bezier2Path addCurveToPoint: CGPointMake(3.43, -14.41) controlPoint1: CGPointMake(3.43, -79.95) controlPoint2: CGPointMake(3.43, -45.58)];
    [bezier2Path addCurveToPoint: CGPointMake(14.43, 0.05) controlPoint1: CGPointMake(9.77, -12.66) controlPoint2: CGPointMake(14.43, -6.85)];
    [bezier2Path addCurveToPoint: CGPointMake(3.43, 14.51) controlPoint1: CGPointMake(14.43, 6.95) controlPoint2: CGPointMake(9.77, 12.76)];
    [bezier2Path addCurveToPoint: CGPointMake(3.43, 35.05) controlPoint1: CGPointMake(3.43, 26.7) controlPoint2: CGPointMake(3.43, 35.05)];
    [bezier2Path addLineToPoint: CGPointMake(-4.57, 35.05)];
    [bezier2Path addCurveToPoint: CGPointMake(-4.57, 14.51) controlPoint1: CGPointMake(-4.57, 35.05) controlPoint2: CGPointMake(-4.57, 26.7)];
    [bezier2Path addCurveToPoint: CGPointMake(-15.57, 0.05) controlPoint1: CGPointMake(-10.91, 12.76) controlPoint2: CGPointMake(-15.57, 6.95)];
    [bezier2Path addCurveToPoint: CGPointMake(-4.57, -14.41) controlPoint1: CGPointMake(-15.57, -6.85) controlPoint2: CGPointMake(-10.91, -12.66)];
    [bezier2Path addCurveToPoint: CGPointMake(-4.57, -79.95) controlPoint1: CGPointMake(-4.57, -45.58) controlPoint2: CGPointMake(-4.57, -79.95)];
    [bezier2Path addLineToPoint: CGPointMake(3.43, -79.95)];
    [bezier2Path addLineToPoint: CGPointMake(3.43, -79.95)];
    [bezier2Path closePath];
    [UIColor.whiteColor setFill];
    [bezier2Path fill];

    CGContextRestoreGState(context);
}

@end
